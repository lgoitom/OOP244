In this workshop, crafting a function template in C++ is the initial focus. This entails understanding the syntax and structure necessary to generate a reusable function template, allowing for the manipulation of arrays irrespective of their data type. The workshop asks us to create a function template that supports multiple data types. This advanced template functionality involves employing multiple type names, granting flexibility to the template to operate on diverse data structures. The workshop also asks to construct a cohesive module for function templates. This involves consolidating the previously acquired skills into a unified module, encapsulating the reusable functions within a coherent framework for broader application. Since this was the first time working with function templates, I found some difficulty in that. To assist me better, I referred to the class notes as well as additional notes and resources online to help me better understand the concept. This workshop helped me to hone my skills in template creation, expanding versatility through multi-type name support, and structuring these functionalities into an organized template module for enhanced code reusability and maintainability. 

